@model LukeMooresWebsite.Models.APIModel

@{
    ViewData["Title"] = "API";
}
<h1>@ViewData["Title"]</h1>

<script src="~/lib/jquery/dist/jquery.min.js" type="text/javascript"></script>
<script src="~/js/API.js" type="text/javascript"></script>

<script type="text/javascript">

    $(document).ready(function () {
        WireEvents();
    });

    function WireEvents() {
        $('#SendButton').click(function () {
            ValidateRequest();
        });

        var button = $('#Showjavascript');
        button.click(function () {
            ShowJavascript(button);
        });
    }

    function ValidateRequest() {
        var messageLength = $('#RequestMessage').val().length;
        var maxlength = parseInt($('#MaxRequestMessageCharacters').val());
        if (messageLength > 0) {
            $('#RequestErrorEmptyMessage').addClass('hide');
            if (messageLength > maxlength) {
                $('#RequestSuccessMessage').addClass('hide');
                $('#RequestErrorMessage').removeClass('hide');
                $('#RequestMessage').removeClass('is-valid');
                $('#RequestMessage').addClass('is-invalid');
            } else {
                $('#RequestErrorMessage').addClass('hide');
                $('#RequestSuccessMessage').removeClass('hide');
                $('#RequestMessage').removeClass('is-invalid');
                $('#RequestMessage').addClass('is-valid');
                SendRequest();
            }
        } else {
            $('#RequestSuccessMessage').addClass('hide');
            $('#RequestErrorMessage').addClass('hide');
            $('#RequestErrorEmptyMessage').removeClass('hide');
            $('#RequestMessage').removeClass('is-valid');
            $('#RequestMessage').addClass('is-invalid');
        }

    }

</script>

<p>Try out the sites built in API</p>

<div id="RequestDiv" class="form-group">
    <h4>Request</h4>
    <p>Type a message to be sent to the API, you will see this come back in the Response</p>
    <label class=" form-label text-white">Request Message:</label>
    @Html.HiddenFor(x => x.MaxRequestMessageCharacters)
    <input type="text" class="form-control is-invalid" maxlength="@Model.MaxRequestMessageCharacters" id="RequestMessage">
    <div id="RequestSuccessMessage" class="valid-feedback hide">Success! Thanks for your message</div>
    <div id="RequestErrorMessage" class="invalid-feedback hide">Warning! You cannot send a message longer than @Model.MaxRequestMessageCharacters characters</div>
    <div id="RequestErrorEmptyMessage" class="invalid-feedback hide">Warning! You must send a message</div>
    <br />
    <button id="SendButton" type="button" class="btn btn-primary btn-sm" title="Send">Send</button>
</div>


<div id="ResponseDiv">
    <h4>Response</h4>
    <textarea id="Response" rows="4" cols="70" disabled="disabled" class="text-black-50"></textarea>
</div>

<button id="Showjavascript" type="button" class="btn btn-primary btn-lg" title="ShowMore/Less">Show javascript</button>

<div id="javascriptDisplay" class="hide">
    <p>The Javacsript powering the Send button is here;</p>
    <textarea id="Response" rows="14" cols="70" disabled="disabled" class="text-black-50">function SendRequest() {
    var obj = { RequestMessage: $('#RequestMessage').val() };

    $.ajax({
        url: "/api/api/",
        type: "POST",
        contentType: 'application/json',
        dataType: 'json',
        data: JSON.stringify(obj)
    })
        .done(function (data) {
            $('#Response').html(JSON.stringify(data));
        })
        .fail(function (error) {
            console.log(error);
        })
}</textarea>
</div>